/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { StdFee } from "@cosmjs/amino";
import { WalletInfo, Chain, Coin, ConfigResp, PoolsResp, TokensResp } from "./FuzioPoolList.types";
export interface FuzioPoolListReadOnlyInterface {
    contractAddress: string;
    tokens: () => Promise<TokensResp>;
    pools: () => Promise<PoolsResp>;
    config: () => Promise<ConfigResp>;
}
export declare class FuzioPoolListQueryClient implements FuzioPoolListReadOnlyInterface {
    client: CosmWasmClient;
    contractAddress: string;
    constructor(client: CosmWasmClient, contractAddress: string);
    tokens: () => Promise<TokensResp>;
    pools: () => Promise<PoolsResp>;
    config: () => Promise<ConfigResp>;
}
export interface FuzioPoolListInterface {
    contractAddress: string;
    sender: string;
    createPool: ({ burnRatio, swapFee, token1, token2 }: {
        burnRatio: number;
        swapFee: string;
        token1: string;
        token2: string;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    listToken: ({ chain, decimal, denom, fullName, isIbcCoin, isNativeCoin, logoUri, symbol }: {
        chain: Chain;
        decimal: number;
        denom: string;
        fullName: string;
        isIbcCoin: boolean;
        isNativeCoin: boolean;
        logoUri: string;
        symbol: string;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    changeConfig: ({ burnFeePercent, devWalletLists, poolCreationFee, tokenListingFee }: {
        burnFeePercent: number;
        devWalletLists: WalletInfo[];
        poolCreationFee: Coin;
        tokenListingFee: Coin;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
}
export declare class FuzioPoolListClient implements FuzioPoolListInterface {
    client: SigningCosmWasmClient;
    sender: string;
    contractAddress: string;
    constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string);
    createPool: ({ burnRatio, swapFee, token1, token2 }: {
        burnRatio: number;
        swapFee: string;
        token1: string;
        token2: string;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    listToken: ({ chain, decimal, denom, fullName, isIbcCoin, isNativeCoin, logoUri, symbol }: {
        chain: Chain;
        decimal: number;
        denom: string;
        fullName: string;
        isIbcCoin: boolean;
        isNativeCoin: boolean;
        logoUri: string;
        symbol: string;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    changeConfig: ({ burnFeePercent, devWalletLists, poolCreationFee, tokenListingFee }: {
        burnFeePercent: number;
        devWalletLists: WalletInfo[];
        poolCreationFee: Coin;
        tokenListingFee: Coin;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
}
