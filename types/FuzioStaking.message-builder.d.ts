/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { Denom, Schedule, ExecuteMsg, Cw20ReceiveMsg, QueryMsg } from "./FuzioStaking.types";
export declare abstract class FuzioStakingExecuteMsgBuilder {
    static receive: ({ amount, msg, sender }: CamelCasedProperties<Cw20ReceiveMsg>) => ExecuteMsg;
    static unbond: ({ amount }: CamelCasedProperties<{
        amount: string;
    }>) => ExecuteMsg;
    static withdraw: () => ExecuteMsg;
    static redeem: () => ExecuteMsg;
    static updateAdmin: ({ admin }: CamelCasedProperties<{
        admin: string;
    }>) => ExecuteMsg;
    static updateConfig: ({ distributionSchedule }: CamelCasedProperties<{
        distribution_schedule: Schedule[];
    }>) => ExecuteMsg;
    static updateTokenContract: ({ lpTokenContract, rewardToken }: CamelCasedProperties<{
        lp_token_contract: string;
        reward_token: Denom[];
    }>) => ExecuteMsg;
    static updateTokensAndDistribution: ({ distributionSchedule, lpTokenContract, rewardToken }: CamelCasedProperties<{
        distribution_schedule: Schedule[];
        lp_token_contract: string;
        reward_token: Denom[];
    }>) => ExecuteMsg;
    static updateLockDuration: ({ lockDuration }: CamelCasedProperties<{
        lock_duration: number;
    }>) => ExecuteMsg;
}
export declare abstract class FuzioStakingQueryMsgBuilder {
    static config: () => QueryMsg;
    static state: ({ blockTime }: CamelCasedProperties<{
        block_time?: number | null | undefined;
    }>) => QueryMsg;
    static stakerInfo: ({ staker }: CamelCasedProperties<{
        staker: string;
    }>) => QueryMsg;
    static allStakers: ({ limit, startAfter }: CamelCasedProperties<{
        limit?: number | null | undefined;
        start_after?: string | null | undefined;
    }>) => QueryMsg;
    static unbondingInfo: ({ limit, staker, startAfter }: CamelCasedProperties<{
        limit?: number | null | undefined;
        staker: string;
        start_after?: number | null | undefined;
    }>) => QueryMsg;
}
