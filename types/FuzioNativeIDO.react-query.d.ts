/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { UseQueryOptions, UseMutationOptions } from "@tanstack/react-query";
import { ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { StdFee } from "@cosmjs/amino";
import { Uint128, Coin, TimeInfo, SaleInfo, State, UserInfoResponse, UserInfosResponse } from "./FuzioNativeIDO.types";
import { FuzioNativeIDOQueryClient, FuzioNativeIDOClient } from "./FuzioNativeIDO.client";
export declare const fuzioNativeIDOQueryKeys: {
    contract: readonly [{
        readonly contract: "fuzioNativeIDO";
    }];
    address: (contractAddress: string) => readonly [{
        readonly address: string;
        readonly contract: "fuzioNativeIDO";
    }];
    getStateInfo: (contractAddress: string, args?: Record<string, unknown>) => readonly [{
        readonly method: "get_state_info";
        readonly args: Record<string, unknown> | undefined;
        readonly address: string;
        readonly contract: "fuzioNativeIDO";
    }];
    getUserInfo: (contractAddress: string, args?: Record<string, unknown>) => readonly [{
        readonly method: "get_user_info";
        readonly args: Record<string, unknown> | undefined;
        readonly address: string;
        readonly contract: "fuzioNativeIDO";
    }];
    getSaleInfo: (contractAddress: string, args?: Record<string, unknown>) => readonly [{
        readonly method: "get_sale_info";
        readonly args: Record<string, unknown> | undefined;
        readonly address: string;
        readonly contract: "fuzioNativeIDO";
    }];
    getClaimableAmount: (contractAddress: string, args?: Record<string, unknown>) => readonly [{
        readonly method: "get_claimable_amount";
        readonly args: Record<string, unknown> | undefined;
        readonly address: string;
        readonly contract: "fuzioNativeIDO";
    }];
    getClaimableTime: (contractAddress: string, args?: Record<string, unknown>) => readonly [{
        readonly method: "get_claimable_time";
        readonly args: Record<string, unknown> | undefined;
        readonly address: string;
        readonly contract: "fuzioNativeIDO";
    }];
    getUserInfos: (contractAddress: string, args?: Record<string, unknown>) => readonly [{
        readonly method: "get_user_infos";
        readonly args: Record<string, unknown> | undefined;
        readonly address: string;
        readonly contract: "fuzioNativeIDO";
    }];
};
export declare const fuzioNativeIDOQueries: {
    getStateInfo: <TData = State>({ client, options }: FuzioNativeIDOGetStateInfoQuery<TData>) => UseQueryOptions<State, Error, TData>;
    getUserInfo: <TData_1 = UserInfoResponse>({ client, args, options }: FuzioNativeIDOGetUserInfoQuery<TData_1>) => UseQueryOptions<UserInfoResponse, Error, TData_1>;
    getSaleInfo: <TData_2 = SaleInfo>({ client, options }: FuzioNativeIDOGetSaleInfoQuery<TData_2>) => UseQueryOptions<SaleInfo, Error, TData_2>;
    getClaimableAmount: <TData_3 = string>({ client, args, options }: FuzioNativeIDOGetClaimableAmountQuery<TData_3>) => UseQueryOptions<string, Error, TData_3>;
    getClaimableTime: <TData_4 = TimeInfo>({ client, args, options }: FuzioNativeIDOGetClaimableTimeQuery<TData_4>) => UseQueryOptions<TimeInfo, Error, TData_4>;
    getUserInfos: <TData_5 = UserInfosResponse>({ client, args, options }: FuzioNativeIDOGetUserInfosQuery<TData_5>) => UseQueryOptions<UserInfosResponse, Error, TData_5>;
};
export interface FuzioNativeIDOReactQuery<TResponse, TData = TResponse> {
    client: FuzioNativeIDOQueryClient;
    options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
        initialData?: undefined;
    };
}
export interface FuzioNativeIDOGetUserInfosQuery<TData> extends FuzioNativeIDOReactQuery<UserInfosResponse, TData> {
    args: {
        limit?: number;
        startAfter?: string;
    };
}
export declare function useFuzioNativeIDOGetUserInfosQuery<TData = UserInfosResponse>({ client, args, options }: FuzioNativeIDOGetUserInfosQuery<TData>): any;
export interface FuzioNativeIDOGetClaimableTimeQuery<TData> extends FuzioNativeIDOReactQuery<TimeInfo, TData> {
    args: {
        address: string;
    };
}
export declare function useFuzioNativeIDOGetClaimableTimeQuery<TData = TimeInfo>({ client, args, options }: FuzioNativeIDOGetClaimableTimeQuery<TData>): any;
export interface FuzioNativeIDOGetClaimableAmountQuery<TData> extends FuzioNativeIDOReactQuery<Uint128, TData> {
    args: {
        address: string;
    };
}
export declare function useFuzioNativeIDOGetClaimableAmountQuery<TData = Uint128>({ client, args, options }: FuzioNativeIDOGetClaimableAmountQuery<TData>): any;
export interface FuzioNativeIDOGetSaleInfoQuery<TData> extends FuzioNativeIDOReactQuery<SaleInfo, TData> {
}
export declare function useFuzioNativeIDOGetSaleInfoQuery<TData = SaleInfo>({ client, options }: FuzioNativeIDOGetSaleInfoQuery<TData>): any;
export interface FuzioNativeIDOGetUserInfoQuery<TData> extends FuzioNativeIDOReactQuery<UserInfoResponse, TData> {
    args: {
        address: string;
    };
}
export declare function useFuzioNativeIDOGetUserInfoQuery<TData = UserInfoResponse>({ client, args, options }: FuzioNativeIDOGetUserInfoQuery<TData>): any;
export interface FuzioNativeIDOGetStateInfoQuery<TData> extends FuzioNativeIDOReactQuery<State, TData> {
}
export declare function useFuzioNativeIDOGetStateInfoQuery<TData = State>({ client, options }: FuzioNativeIDOGetStateInfoQuery<TData>): any;
export interface FuzioNativeIDOWithdrawTokenNotSoldByAdminMutation {
    client: FuzioNativeIDOClient;
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useFuzioNativeIDOWithdrawTokenNotSoldByAdminMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FuzioNativeIDOWithdrawTokenNotSoldByAdminMutation>, "mutationFn">): any;
export interface FuzioNativeIDOChangeAdminMutation {
    client: FuzioNativeIDOClient;
    msg: {
        address: string;
    };
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useFuzioNativeIDOChangeAdminMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FuzioNativeIDOChangeAdminMutation>, "mutationFn">): any;
export interface FuzioNativeIDOClaimTokenMutation {
    client: FuzioNativeIDOClient;
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useFuzioNativeIDOClaimTokenMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FuzioNativeIDOClaimTokenMutation>, "mutationFn">): any;
export interface FuzioNativeIDOBuyTokenMutation {
    client: FuzioNativeIDOClient;
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useFuzioNativeIDOBuyTokenMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FuzioNativeIDOBuyTokenMutation>, "mutationFn">): any;
