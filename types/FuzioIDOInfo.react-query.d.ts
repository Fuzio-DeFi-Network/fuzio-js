/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { UseQueryOptions, UseMutationOptions } from "@tanstack/react-query";
import { ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { StdFee, Coin } from "@cosmjs/amino";
import { Action, Config } from "./FuzioIDOInfo.types";
import { FuzioIDOInfoQueryClient, FuzioIDOInfoClient } from "./FuzioIDOInfo.client";
export declare const fuzioIDOInfoQueryKeys: {
    contract: readonly [{
        readonly contract: "fuzioIDOInfo";
    }];
    address: (contractAddress: string) => readonly [{
        readonly address: string;
        readonly contract: "fuzioIDOInfo";
    }];
    config: (contractAddress: string, args?: Record<string, unknown>) => readonly [{
        readonly method: "config";
        readonly args: Record<string, unknown> | undefined;
        readonly address: string;
        readonly contract: "fuzioIDOInfo";
    }];
};
export declare const fuzioIDOInfoQueries: {
    config: <TData = Config>({ client, options }: FuzioIDOInfoConfigQuery<TData>) => UseQueryOptions<Config, Error, TData>;
};
export interface FuzioIDOInfoReactQuery<TResponse, TData = TResponse> {
    client: FuzioIDOInfoQueryClient;
    options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
        initialData?: undefined;
    };
}
export interface FuzioIDOInfoConfigQuery<TData> extends FuzioIDOInfoReactQuery<Config, TData> {
}
export declare function useFuzioIDOInfoConfigQuery<TData = Config>({ client, options }: FuzioIDOInfoConfigQuery<TData>): any;
export interface FuzioIDOInfoUpdateOwnershipMutation {
    client: FuzioIDOInfoClient;
    msg: Action;
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useFuzioIDOInfoUpdateOwnershipMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FuzioIDOInfoUpdateOwnershipMutation>, "mutationFn">): any;
export interface FuzioIDOInfoUpdateConfigMutation {
    client: FuzioIDOInfoClient;
    msg: {
        newConfig: Config;
    };
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useFuzioIDOInfoUpdateConfigMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FuzioIDOInfoUpdateConfigMutation>, "mutationFn">): any;
