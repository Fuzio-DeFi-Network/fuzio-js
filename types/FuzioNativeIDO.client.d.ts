/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.28.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { StdFee } from "@cosmjs/amino";
import { Uint128, Coin, TimeInfo, SaleInfo, State, UserInfoResponse, UserInfosResponse } from "./FuzioNativeIDO.types";
export interface FuzioNativeIDOReadOnlyInterface {
    contractAddress: string;
    getStateInfo: () => Promise<State>;
    getUserInfo: ({ address }: {
        address: string;
    }) => Promise<UserInfoResponse>;
    getSaleInfo: () => Promise<SaleInfo>;
    getClaimableAmount: ({ address }: {
        address: string;
    }) => Promise<Uint128>;
    getClaimableTime: ({ address }: {
        address: string;
    }) => Promise<TimeInfo>;
    getUserInfos: ({ limit, startAfter }: {
        limit?: number;
        startAfter?: string;
    }) => Promise<UserInfosResponse>;
}
export declare class FuzioNativeIDOQueryClient implements FuzioNativeIDOReadOnlyInterface {
    client: CosmWasmClient;
    contractAddress: string;
    constructor(client: CosmWasmClient, contractAddress: string);
    getStateInfo: () => Promise<State>;
    getUserInfo: ({ address }: {
        address: string;
    }) => Promise<UserInfoResponse>;
    getSaleInfo: () => Promise<SaleInfo>;
    getClaimableAmount: ({ address }: {
        address: string;
    }) => Promise<Uint128>;
    getClaimableTime: ({ address }: {
        address: string;
    }) => Promise<TimeInfo>;
    getUserInfos: ({ limit, startAfter }: {
        limit?: number;
        startAfter?: string;
    }) => Promise<UserInfosResponse>;
}
export interface FuzioNativeIDOInterface extends FuzioNativeIDOReadOnlyInterface {
    contractAddress: string;
    sender: string;
    buyToken: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    claimToken: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    changeAdmin: ({ address }: {
        address: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    withdrawTokenNotSoldByAdmin: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
export declare class FuzioNativeIDOClient extends FuzioNativeIDOQueryClient implements FuzioNativeIDOInterface {
    client: SigningCosmWasmClient;
    sender: string;
    contractAddress: string;
    constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string);
    buyToken: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    claimToken: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    changeAdmin: ({ address }: {
        address: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    withdrawTokenNotSoldByAdmin: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
