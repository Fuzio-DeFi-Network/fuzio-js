/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { Uint128, Denom, Addr, InstantiateMsg, Schedule, ExecuteMsg, Binary, Cw20ReceiveMsg, QueryMsg, Decimal, StakersListResponse, StakerInfo, ConfigResponse, StakerInfoResponse, StateResponse, UnbondingInfoResponse, UnbondingInfo } from "./FuzioStaking.types";
import { CamelCasedProperties } from "type-fest";
export abstract class FuzioStakingExecuteMsgBuilder {
  static receive = ({
    amount,
    msg,
    sender
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    receive: unknown;
  }>["receive"]>): ExecuteMsg => {
    return {
      receive: ({
        amount,
        msg,
        sender
      } as const)
    };
  };
  static unbond = ({
    amount
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    unbond: unknown;
  }>["unbond"]>): ExecuteMsg => {
    return {
      unbond: ({
        amount
      } as const)
    };
  };
  static withdraw = (): ExecuteMsg => {
    return {
      withdraw: ({} as const)
    };
  };
  static redeem = (): ExecuteMsg => {
    return {
      redeem: ({} as const)
    };
  };
  static updateAdmin = ({
    admin
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_admin: unknown;
  }>["update_admin"]>): ExecuteMsg => {
    return {
      update_admin: ({
        admin
      } as const)
    };
  };
  static updateConfig = ({
    distributionSchedule
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_config: unknown;
  }>["update_config"]>): ExecuteMsg => {
    return {
      update_config: ({
        distribution_schedule: distributionSchedule
      } as const)
    };
  };
  static updateTokenContract = ({
    lpTokenContract,
    rewardToken
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_token_contract: unknown;
  }>["update_token_contract"]>): ExecuteMsg => {
    return {
      update_token_contract: ({
        lp_token_contract: lpTokenContract,
        reward_token: rewardToken
      } as const)
    };
  };
  static updateTokensAndDistribution = ({
    distributionSchedule,
    lpTokenContract,
    rewardToken
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_tokens_and_distribution: unknown;
  }>["update_tokens_and_distribution"]>): ExecuteMsg => {
    return {
      update_tokens_and_distribution: ({
        distribution_schedule: distributionSchedule,
        lp_token_contract: lpTokenContract,
        reward_token: rewardToken
      } as const)
    };
  };
  static updateLockDuration = ({
    lockDuration
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_lock_duration: unknown;
  }>["update_lock_duration"]>): ExecuteMsg => {
    return {
      update_lock_duration: ({
        lock_duration: lockDuration
      } as const)
    };
  };
}
export abstract class FuzioStakingQueryMsgBuilder {
  static config = (): QueryMsg => {
    return {
      config: ({} as const)
    };
  };
  static state = ({
    blockTime
  }: CamelCasedProperties<Extract<QueryMsg, {
    state: unknown;
  }>["state"]>): QueryMsg => {
    return {
      state: ({
        block_time: blockTime
      } as const)
    };
  };
  static stakerInfo = ({
    staker
  }: CamelCasedProperties<Extract<QueryMsg, {
    staker_info: unknown;
  }>["staker_info"]>): QueryMsg => {
    return {
      staker_info: ({
        staker
      } as const)
    };
  };
  static allStakers = ({
    limit,
    startAfter
  }: CamelCasedProperties<Extract<QueryMsg, {
    all_stakers: unknown;
  }>["all_stakers"]>): QueryMsg => {
    return {
      all_stakers: ({
        limit,
        start_after: startAfter
      } as const)
    };
  };
  static unbondingInfo = ({
    limit,
    staker,
    startAfter
  }: CamelCasedProperties<Extract<QueryMsg, {
    unbonding_info: unknown;
  }>["unbonding_info"]>): QueryMsg => {
    return {
      unbonding_info: ({
        limit,
        staker,
        start_after: startAfter
      } as const)
    };
  };
}