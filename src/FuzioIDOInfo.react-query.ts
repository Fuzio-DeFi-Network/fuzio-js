/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { UseQueryOptions, useQuery, useMutation, UseMutationOptions } from "@tanstack/react-query";
import { ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { StdFee, Coin } from "@cosmjs/amino";
import { Addr, Decimal, Uint128, InstantiateMsg, WalletInfo, ExecuteMsg, Action, Expiration, Timestamp, Uint64, Config, QueryMsg } from "./FuzioIDOInfo.types";
import { FuzioIDOInfoQueryClient, FuzioIDOInfoClient } from "./FuzioIDOInfo.client";
export const fuzioIDOInfoQueryKeys = {
  contract: ([{
    contract: "fuzioIDOInfo"
  }] as const),
  address: (contractAddress: string) => ([{ ...fuzioIDOInfoQueryKeys.contract[0],
    address: contractAddress
  }] as const),
  config: (contractAddress: string, args?: Record<string, unknown>) => ([{ ...fuzioIDOInfoQueryKeys.address(contractAddress)[0],
    method: "config",
    args
  }] as const)
};
export const fuzioIDOInfoQueries = {
  config: <TData = Config,>({
    client,
    options
  }: FuzioIDOInfoConfigQuery<TData>): UseQueryOptions<Config, Error, TData> => ({
    queryKey: fuzioIDOInfoQueryKeys.config(client?.contractAddress),
    queryFn: () => client.config(),
    ...options,
    enabled: !!client && (options?.enabled != undefined ? options.enabled : true)
  })
};
export interface FuzioIDOInfoReactQuery<TResponse, TData = TResponse> {
  client: FuzioIDOInfoQueryClient;
  options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
    initialData?: undefined;
  };
}
export interface FuzioIDOInfoConfigQuery<TData> extends FuzioIDOInfoReactQuery<Config, TData> {}
export function useFuzioIDOInfoConfigQuery<TData = Config>({
  client,
  options
}: FuzioIDOInfoConfigQuery<TData>) {
  return useQuery<Config, Error, TData>(fuzioIDOInfoQueryKeys.config(client.contractAddress), () => client.config(), options);
}
export interface FuzioIDOInfoUpdateOwnershipMutation {
  client: FuzioIDOInfoClient;
  msg: Action;
  args?: {
    fee?: number | StdFee | "auto";
    memo?: string;
    funds?: Coin[];
  };
}
export function useFuzioIDOInfoUpdateOwnershipMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FuzioIDOInfoUpdateOwnershipMutation>, "mutationFn">) {
  return useMutation<ExecuteResult, Error, FuzioIDOInfoUpdateOwnershipMutation>(({
    client,
    msg,
    args: {
      fee,
      memo,
      funds
    } = {}
  }) => client.updateOwnership(msg, fee, memo, funds), options);
}
export interface FuzioIDOInfoUpdateConfigMutation {
  client: FuzioIDOInfoClient;
  msg: {
    newConfig: Config;
  };
  args?: {
    fee?: number | StdFee | "auto";
    memo?: string;
    funds?: Coin[];
  };
}
export function useFuzioIDOInfoUpdateConfigMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FuzioIDOInfoUpdateConfigMutation>, "mutationFn">) {
  return useMutation<ExecuteResult, Error, FuzioIDOInfoUpdateConfigMutation>(({
    client,
    msg,
    args: {
      fee,
      memo,
      funds
    } = {}
  }) => client.updateConfig(msg, fee, memo, funds), options);
}