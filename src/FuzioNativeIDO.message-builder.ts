/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { Uint128, InstantiateMsg, IdoInfo, Description, Product, Socials, Team, TeamMember, Coin, ExecuteMsg, QueryMsg, TimeInfo, SaleInfo, Addr, Decimal, State, WalletInfo, UserInfoResponse, UserInfo, UserInfosResponse } from "./FuzioNativeIDO.types";
import { CamelCasedProperties } from "type-fest";
export abstract class FuzioNativeIDOExecuteMsgBuilder {
  static buyToken = (): ExecuteMsg => {
    return {
      buy_token: ({} as const)
    };
  };
  static claimToken = (): ExecuteMsg => {
    return {
      claim_token: ({} as const)
    };
  };
  static changeAdmin = ({
    address
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    change_admin: unknown;
  }>["change_admin"]>): ExecuteMsg => {
    return {
      change_admin: ({
        address
      } as const)
    };
  };
  static withdrawTokenNotSoldByAdmin = (): ExecuteMsg => {
    return {
      withdraw_token_not_sold_by_admin: ({} as const)
    };
  };
}
export abstract class FuzioNativeIDOQueryMsgBuilder {
  static getStateInfo = (): QueryMsg => {
    return {
      get_state_info: ({} as const)
    };
  };
  static getUserInfo = ({
    address
  }: CamelCasedProperties<Extract<QueryMsg, {
    get_user_info: unknown;
  }>["get_user_info"]>): QueryMsg => {
    return {
      get_user_info: ({
        address
      } as const)
    };
  };
  static getSaleInfo = (): QueryMsg => {
    return {
      get_sale_info: ({} as const)
    };
  };
  static getClaimableAmount = ({
    address
  }: CamelCasedProperties<Extract<QueryMsg, {
    get_claimable_amount: unknown;
  }>["get_claimable_amount"]>): QueryMsg => {
    return {
      get_claimable_amount: ({
        address
      } as const)
    };
  };
  static getClaimableTime = ({
    address
  }: CamelCasedProperties<Extract<QueryMsg, {
    get_claimable_time: unknown;
  }>["get_claimable_time"]>): QueryMsg => {
    return {
      get_claimable_time: ({
        address
      } as const)
    };
  };
  static getUserInfos = ({
    limit,
    startAfter
  }: CamelCasedProperties<Extract<QueryMsg, {
    get_user_infos: unknown;
  }>["get_user_infos"]>): QueryMsg => {
    return {
      get_user_infos: ({
        limit,
        start_after: startAfter
      } as const)
    };
  };
}